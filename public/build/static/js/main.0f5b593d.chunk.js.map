{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","data","React","Component","Header","className","Content","Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,kC,qICcrCC,G,wBACJ,aAAe,IAAD,8BACX,+CACKC,MAAQ,CACVC,KACA,CACG,CACG,GAAK,EACL,KAAO,MACP,IAAM,MAET,CACG,GAAK,EACL,KAAO,MACP,IAAM,MAET,CACG,GAAK,EACL,KAAO,MACP,IAAM,QAlBJ,E,sEAwBX,OACG,6BACG,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA7BOC,IAAMC,YAkClBC,E,iLAED,OACG,yBAAKC,UAAU,cACb,iD,GAJWH,IAAMC,WAWrBG,E,iLAED,OACG,yBAAKD,UAAU,eAAf,gjM,GAHcH,IAAMC,WA4BtBI,E,iLAED,OACE,yBAAKF,UAAU,mB,GAHDH,IAAMC,WASZJ,ICpFTS,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvB,QACfiB,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB5B,OAAOC,SAAS4B,MACpDC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,GAAN,sBAEP9B,IAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,GACHK,MAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,MAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,MAAK,WAC7BV,OAAOC,SAASwC,eAKpBrC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFAwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.0f5b593d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n        \n//       </div>\n//     </div>\n//   );\n// }\n\nclass App extends React.Component {\n  constructor() {\n     super();\n     this.state = {\n        data: \n        [\n           {\n              \"id\":1,\n              \"name\":\"Foo\",\n              \"age\":\"20\"\n           },\n           {\n              \"id\":2,\n              \"name\":\"Bar\",\n              \"age\":\"30\"\n           },\n           {\n              \"id\":3,\n              \"name\":\"Baz\",\n              \"age\":\"40\"\n           }\n        ]\n     }\n  }\n  render() {\n     return (\n        <div>\n           <Header/>\n           <Content/>\n           <Footer/>\n        </div>\n     );\n  }\n}\nclass Header extends React.Component {\n  render() {\n     return (\n        <div className=\"app-header\">\n          <label>React App</label>\n        </div>\n     );\n  }\n}\n\n\nclass Content extends React.Component {\n  render() {\n     return (\n        <div className=\"app-content\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sollicitudin dictum gravida. Integer gravida porta justo vel auctor. Proin vitae sapien in magna rhoncus sollicitudin. Duis quis porttitor dui. Nullam imperdiet mauris et lectus fermentum finibus. Duis quis sodales eros. Nullam ultrices libero ac turpis tincidunt, in scelerisque nisl volutpat. Integer quis sapien purus. Cras vehicula varius ligula non elementum. Quisque ut purus ut nisi porta dapibus. In ac nisi id augue tempus rutrum. Duis quis rhoncus nisi, at sagittis ipsum. Praesent at elit non nisl malesuada bibendum interdum sit amet metus. In non imperdiet urna. Integer luctus augue odio, lobortis mattis ipsum sodales sit amet.\n\nMaecenas at metus felis. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi convallis orci sit amet venenatis aliquet. Donec ornare molestie nibh, a scelerisque ante scelerisque eget. In ligula libero, egestas id felis sed, commodo tincidunt massa. Donec lobortis lorem lorem, non sodales augue rhoncus nec. Proin vitae placerat velit. Sed in urna sit amet tellus pretium sagittis.\n\nSed varius vulputate nisi, in dictum lacus ultrices a. Mauris urna elit, mollis sed tortor quis, vulputate aliquam nunc. Curabitur hendrerit mattis eros, ut ultrices augue suscipit a. Sed dignissim ante est, quis laoreet augue commodo tincidunt. Cras mollis dolor non dolor tempus, eu blandit augue dictum. Fusce at nibh nibh. Quisque pulvinar sollicitudin interdum. Suspendisse id massa iaculis, convallis ante quis, malesuada tortor. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nullam rutrum in erat id condimentum. Aliquam tristique ornare nisl, quis feugiat risus condimentum vel. Nunc fermentum nec eros et tempus. Donec molestie nisi at risus maximus eleifend. Sed eu enim ac purus aliquet placerat quis eget magna.\n\nSed augue dolor, faucibus et aliquet ac, lobortis fermentum augue. Phasellus viverra ultrices eros, sodales euismod erat. Nullam suscipit lectus ac ligula bibendum, eu congue risus vestibulum. Morbi et finibus tortor, ac posuere eros. Ut viverra felis ut est faucibus sagittis. Proin quis sem nisi. Morbi dignissim ante et consequat porttitor. Ut eu dapibus nibh. Nullam eget mi in orci fringilla mattis.\n\nCras a quam a urna efficitur dapibus. Donec hendrerit lorem et elit laoreet, vel venenatis ante sollicitudin. Pellentesque rutrum cursus massa vel auctor. Pellentesque semper odio vel porta feugiat. Ut at mi in justo elementum ullamcorper at a enim. Aliquam non placerat enim. Fusce tempus elit nec orci sagittis luctus. Sed porttitor mollis aliquam. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Donec viverra egestas justo, sit amet vulputate libero rutrum ac. Mauris euismod elementum nisi, vel iaculis lacus egestas vitae. In non ligula odio. Curabitur ultricies, ex vitae tincidunt congue, velit metus lobortis nibh, sed accumsan justo orci pharetra magna.\n\nDonec finibus tortor faucibus, pretium justo nec, faucibus sem. Maecenas nec sodales dui, iaculis pretium nisi. Ut sit amet consectetur lectus. Nam ultricies erat turpis, vitae consequat dolor tincidunt varius. Cras ac tellus et neque malesuada faucibus. Donec consectetur, leo vel bibendum ultricies, ligula lorem gravida dolor, sed posuere augue elit eleifend nunc. Morbi nisi urna, ornare sed tortor eget, auctor vehicula odio. Donec malesuada mauris eget purus rhoncus, non tincidunt nunc imperdiet. Cras feugiat, purus sit amet sagittis eleifend, justo ante tristique quam, sit amet elementum odio tortor sit amet nisl. Phasellus condimentum in ante sit amet viverra.\n\nMaecenas tempus ornare tortor laoreet tempus. Vestibulum aliquam nulla vel libero placerat aliquam. Vivamus vel scelerisque tellus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In blandit augue nec hendrerit gravida. Aenean imperdiet quis neque sed blandit. Nullam congue viverra purus eu tincidunt. Sed a tristique velit.\n\nSed sagittis eget ipsum at posuere. Proin nisl nulla, venenatis in luctus non, tincidunt ac felis. Donec augue enim, eleifend sed turpis non, blandit convallis lorem. Nam in justo consectetur, semper arcu rhoncus, imperdiet ante. Curabitur a quam eget augue congue convallis laoreet in orci. Nunc eget mi sed turpis fringilla dictum. Ut ut facilisis nisi. Nunc posuere arcu vitae magna euismod interdum. Praesent pulvinar, mi ullamcorper lobortis aliquet, sem enim porttitor nisi, a tincidunt dolor sem a lacus. Nullam facilisis rhoncus lacus eget hendrerit. Aliquam sodales scelerisque urna eu porta.\n\nFusce tincidunt, mauris ac lobortis fringilla, turpis quam vulputate turpis, at tempor nisl metus id magna. Curabitur gravida facilisis lobortis. Curabitur mollis, lectus a pellentesque faucibus, diam lectus elementum odio, id placerat neque nisi nec dolor. Integer neque urna, vestibulum vel tellus at, suscipit varius risus. Aenean laoreet metus eros, ac luctus mi aliquam vel. Suspendisse at placerat nulla. Fusce suscipit, dolor sit amet accumsan placerat, libero eros sagittis quam, a porta est ante et urna. Etiam sit amet massa facilisis, tristique magna id, ultricies elit. Vestibulum ut orci enim. Aliquam at nulla justo. Suspendisse iaculis fringilla ligula vitae sodales. Aenean in sagittis ipsum.\n\nAliquam faucibus tristique erat, id lacinia ligula rutrum at. Vivamus id erat eget lectus sagittis feugiat. Quisque semper quam iaculis magna fringilla, pellentesque ornare odio imperdiet. Phasellus ut est at ligula mollis auctor maximus eget mauris. Cras quis imperdiet justo, non rhoncus tellus. Fusce nunc sapien, sodales id lectus non, ornare fermentum enim. Sed pulvinar, neque et gravida aliquam, enim nisi gravida nisl, in convallis mi lacus vitae lorem. Pellentesque purus felis, tempus tempor rutrum malesuada, scelerisque ut ipsum. Nulla ac auctor arcu. Nam porta, elit nec pharetra mollis, leo mi aliquam enim, eu convallis lectus lorem in neque. Nulla facilisi. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur a tincidunt mauris, vel porta libero. In hac habitasse platea dictumst.\n        </div>\n     );\n  }\n}\n\nclass Footer extends React.Component {\n  render() {\n     return (\n       <div className=\"app-footer\">\n       </div>\n     );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}